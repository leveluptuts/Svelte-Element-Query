{
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* Basic Options */
		// "incremental": true,                         /* Enable incremental compilation */
		"target": "ES2015",
		"module": "ES2020",

		"declaration": true /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,

		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options. */,
		/* Module Resolution Options */
		// "moduleResolution": "node",                  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
		// "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */
		// "paths": {},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
		// "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */
		// "typeRoots": [],                             /* List of folders to include type definitions from. */
		// "types": [],                                 /* Type declaration files to be included in compilation. */
		// "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		// "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */
		// "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */

		/* Source Map Options */
		// "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */
		// "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
		// "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */
		// "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

		/* Experimental Options */
		// "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */
		// "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */

		/* Advanced Options */
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
	}
}
